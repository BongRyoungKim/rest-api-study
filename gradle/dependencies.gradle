configurations {
    querydslapt
}

/**
 * Dependencies Libraries Versions
 */
def versions = [
        spring: "3.2.2.RELEASE",
        hibernate: "4.2.0.Final",
        hibernateValidator: "5.0.1.Final",
        springDataJpa: "1.3.4.RELEASE",
        springSecurity: "3.1.4.RELEASE",
        slf4j: "1.6.6",
        logBack: "1.0.13",
        lombok: "0.12.0",
        boneCP: "0.8.0-rc1",
        googleGuava: "14.0.1",
        modelmapper: "0.6.1",
        querydsl: "2.9.0",
        jackson: "1.9.9",
        h2database: "1.3.172",
        jodaTime: "2.1",
        sitemesh: "2.4.2"
]

def hibernate = [
        "org.hibernate:hibernate-core:${versions.hibernate}",
        "org.hibernate:hibernate-entitymanager:${versions.hibernate}",
        "org.hibernate:hibernate-validator:${versions.hibernateValidator}",
        "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final"
]

def springframework = [
        "org.springframework:spring-core:${versions.spring}",
        "org.springframework:spring-context:${versions.spring}",
        "org.springframework:spring-web:${versions.spring}",
        "org.springframework:spring-webmvc:${versions.spring}",
        "org.springframework:spring-aop:${versions.spring}",
        "org.springframework:spring-tx:${versions.spring}",
        "org.springframework:spring-aspects:${versions.spring}",
        "org.springframework:spring-jdbc:${versions.spring}",
        "org.springframework:spring-oxm:${versions.spring}",
        "org.springframework:spring-orm:${versions.spring}",
        "org.springframework:spring-test:${versions.spring}"
]

dependencies {
    //annotation
    compile "javax.inject:javax.inject:1"

    /**
     * SpringFramework: http://www.springsource.org/spring-framework
     */
    springframework.collect {
        compile(it)
    }

    /**
     * Spring Data JPA: http://www.springsource.org/spring-data/jpa
     */
    compile("org.springframework.data:spring-data-jpa:${versions.springDataJpa}") {
        exclude group: "org.aspectj"
    }

    /**
     * Spring Security: http://www.springsource.org/spring-security
     */
    compile "org.springframework.security:spring-security-core:${versions.springSecurity}"
    compile "org.springframework.security:spring-security-web:${versions.springSecurity}"

    /**
     * Hibernate: http://www.hibernate.org/
     * cglib 모듈 제외
     */
    hibernate.collect {
        compile(it) {
            exclude(group: "cglib", module: "cglib")
        }
    }

    /**
     * QueryDSL: http://www.querydsl.com/
     */
    compile "com.mysema.querydsl:querydsl-apt:${versions.querydsl}"
    compile "com.mysema.querydsl:querydsl-jpa:${versions.querydsl}"
    querydslapt "com.mysema.querydsl:querydsl-apt:${versions.querydsl}"

    compile "org.apache.commons:commons-lang3:3.1"

    //BoneCP : http://jolbox.com/
    compile "com.jolbox:bonecp:${versions.boneCP}"

    /**
     * SLF4j & Logback
     * SLF4j: http://www.slf4j.org/
     * Logback: http://logback.qos.ch/
     */
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    runtime "org.slf4j:jcl-over-slf4j:${versions.slf4j}"
    runtime "org.slf4j:log4j-over-slf4j:${versions.slf4j}"
    compile "ch.qos.logback:logback-classic:${versions.logBack}"

    /**
     * Google Guava(Collecton Utils): http://code.google.com/p/guava-libraries/
     */
    compile "com.google.guava:guava:${versions.googleGuava}"

    /**
     * Joda Time(Java date and time API): http://joda-time.sourceforge.net/
     */
    compile "joda-time:joda-time:${versions.jodaTime}"

    /**
     * Jackson(High-performance JSON Processor): http://jackson.codehaus.org/
     */
    compile "org.codehaus.jackson:jackson-core-asl:${versions.jackson}"
    compile "org.codehaus.jackson:jackson-mapper-asl:${versions.jackson}"

    /**
     * FasterXML/jackson-module-hibernate: https://github.com/FasterXML/jackson-module-hibernate
     */
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.2.2"

    /**
     * H2Database: http://www.h2database.com/html/main.html
     */
    compile "com.h2database:h2:${versions.h2database}"

    /**
     * Lombok: http://projectlombok.org/
     */
    compile "org.projectlombok:lombok:${versions.lombok}"

    /**
     * ModelMapper: http://modelmapper.org
     */
    compile "org.modelmapper:modelmapper:${versions.modelmapper}"

    /**
     * SiteMesh: https://github.com/sitemesh
     * - reference: http://www.javajigi.net/display/OSS/SiteMesh
     */
    compile "opensymphony:sitemesh:${versions.sitemesh}"


    compile "javax.servlet:jstl:1.2"

    /**
     * Logback을 사용하기 때문에 모든 의존성 라이브러리에서 common-logging는 제외
     */
    [configurations.runtime, configurations.default]*.exclude(module: 'commons-logging')

    /**
     * Java Compile Encoding: UTF-8
     */
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    testCompile group: "junit", name: "junit", version: "4.+"
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    runtime "javax.servlet:jstl:1.2"
}
